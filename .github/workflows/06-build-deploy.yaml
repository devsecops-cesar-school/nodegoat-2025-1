name: 06-build-deploy

on:
  pull_request:
  push:
    branches:
      - main

# Cancel previous runs if a new commit is pushed to the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Docker Image
    runs-on: [arc-runner-set]
    timeout-minutes: 20
    permissions:
      contents: read
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Prepare Docker tags
        id: docker-tags
        run: |
          TAG=$(.github/scripts/get-docker-tag.sh "${{ github.head_ref || github.ref_name }}")
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/nodegoat:${{ steps.docker-tags.outputs.tag }}
          platforms: linux/amd64,linux/arm64

  deploy:
    name: Deploy to ${{ matrix.environment }}
    runs-on: [arc-runner-set]
    timeout-minutes: 10
    needs: build
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        environment: [staging]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Download Kubernetes CLI Tools
        uses: alexellis/arkade-get@master
        with:
          kubectl: latest

      - name: Get Docker tag
        id: docker-tags
        run: |
          TAG=$(.github/scripts/get-docker-tag.sh "${{ github.head_ref || github.ref_name }}")
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Configure access to Kubernetes
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
          echo "KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV

      - name: Deploy to ${{ matrix.environment }}
        run: |
          NAMESPACE="nodegoat"
          kubectl create ns ${NAMESPACE} || true
          kubectl set image deployment/nodegoat nodegoat=${{ vars.DOCKERHUB_USERNAME }}/nodegoat:${{ steps.docker-tags.outputs.tag }} -n ${NAMESPACE} || true
          kubectl apply -n ${NAMESPACE} -f k8s/nodegoat/
