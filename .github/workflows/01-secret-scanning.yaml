name: 01-secret-scanning

on: [pull_request]

jobs:
  secret-scanning:
    name: Secret Scanning - ${{ matrix.tool }}
    runs-on: [arc-runner-set]
    permissions:
      contents: read
      pull-requests: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        tool: [trivy, gitleaks]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Trivy (JSON for Summary)
        if: matrix.tool == 'trivy'
        continue-on-error: true
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          hide-progress: true
          format: json
          output: trivy-results.json
          scanners: secret
          severity: HIGH,CRITICAL

      - name: Run Trivy (SARIF for Code Scanning)
        if: matrix.tool == 'trivy'
        continue-on-error: true
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          hide-progress: true
          format: sarif
          output: trivy-results.sarif
          scanners: secret
          severity: HIGH,CRITICAL

      - name: Upload Trivy SARIF
        if: always() && matrix.tool == 'trivy' && hashFiles('trivy-results.sarif') != ''
        continue-on-error: true
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      - name: Generate Trivy Summary
        if: always() && matrix.tool == 'trivy'
        continue-on-error: true
        run: |
          if [[ -f trivy-results.json ]]; then
            echo "## ðŸ”“ Trivy Secret Scanning Results" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            HAS_SECRETS=$(jq '[.Results[]? | select(.Secrets != null) | .Secrets[]] | length' trivy-results.json)

            if [[ "$HAS_SECRETS" -gt 0 ]]; then
              echo "| Target | Rule ID | Category | Severity | Start Line | End Line | Match |" >> $GITHUB_STEP_SUMMARY
              echo "|--------|---------|----------|----------|------------|----------|-------|" >> $GITHUB_STEP_SUMMARY

              jq -r '.Results[]? | select(.Secrets != null) | .Target as $target | .Secrets[] | "| \($target) | \(.RuleID) | \(.Category) | \(.Severity) | \(.StartLine // "N/A") | \(.EndLine // "N/A") | `REDACTED` |"' trivy-results.json >> $GITHUB_STEP_SUMMARY
            else
              echo "âœ… No secrets detected!" >> $GITHUB_STEP_SUMMARY
            fi

            echo "" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Run Trivy (Final Check - Fail on HIGH,CRITICAL)
        if: matrix.tool == 'trivy'
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          hide-progress: true
          format: table
          scanners: secret
          severity: HIGH,CRITICAL
          exit-code: 1

      - name: Run Gitleaks
        if: matrix.tool == 'gitleaks'
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

      - name: Upload Gitleaks SARIF
        if: always() && matrix.tool == 'gitleaks'
        continue-on-error: true
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif